---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: controller
  name: controller
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      app: controller
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: controller
      name: controller
    spec:
      containers:
        - name: controller
          image: veertu/anka-build-cloud-controller:v{{ .Values.controller.version }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: ANKA_ANKA_REGISTRY
              value: {{ required ".controller.ANKA_ANKA_REGISTRY value is required!" .Values.controller.ANKA_ANKA_REGISTRY  }}
            - name: ANKA_LOCAL_ANKA_REGISTRY
              value: {{ .Values.controller.ANKA_LOCAL_ANKA_REGISTRY }}
            - name: ANKA_ETCD_ENDPOINTS
              value: {{ .Values.controller.ANKA_ETCD_ENDPOINTS }}
            - name: ANKA_ENABLE_CENTRAL_LOGGING
              value: {{ quote .Values.controller.ANKA_ENABLE_CENTRAL_LOGGING }}
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: registry
  name: registry
spec:
  replicas: {{ .Values.registry.replicaCount }}
  selector:
    matchLabels:
      app: registry
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: registry
      name: registry
    spec:
      containers:
        - name: registry
          image: veertu/anka-build-cloud-registry:v{{ .Values.registry.version }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8089
          volumeMounts:
            - mountPath: /mnt/vol
              name: registry-data
      restartPolicy: Always
      volumes:
        - name: registry-data
          persistentVolumeClaim:
            claimName: {{ required ".registry.volumeClaimName value is required!" .Values.registry.volumeClaimName }}
{{ if .Values.etcd.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: etcd
  name: etcd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcd
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: etcd
      name: etcd
    spec:
      containers:
        - name: etcd
          image: veertu/anka-build-cloud-etcd:v{{ .Values.etcd.version }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 2379
          volumeMounts:
            - mountPath: /etcd-data
              name: etcd-data
          env:
            - name: ETCD_QUOTA_BACKEND_BYTES
              value: {{ quote .Values.etcd.ETCD_QUOTA_BACKEND_BYTES }}
            - name: ETCD_DATA_DIR
              value: "/etcd-data"
            - name: ETCD_LISTEN_CLIENT_URLS
              value: "http://0.0.0.0:2379"
            - name: ETCD_ADVERTISE_CLIENT_URLS
              value: "http://0.0.0.0:2379"
            - name: ETCD_LISTEN_PEER_URLS
              value: "http://0.0.0.0:2380"
            - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
              value: "http://0.0.0.0:2380"
            - name: ETCD_INITIAL_CLUSTER
              value: "my-etcd=http://0.0.0.0:2380"
            - name: ETCD_INITIAL_CLUSTER_TOKEN
              value: "my-etcd-token"
            - name: ETCD_INITIAL_CLUSTER_STATE
              value: "new"
            - name: ETCD_AUTO_COMPACTION_RETENTION
              value: "1m"
            - name: ETCD_NAME
              value: "my-etcd"
      restartPolicy: Always
      volumes:
        - name: etcd-data
          persistentVolumeClaim:
            claimName: {{ required ".etcd.volumeClaimName value is required!" .Values.etcd.volumeClaimName }}
{{ end }}